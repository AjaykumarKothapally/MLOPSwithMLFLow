name: CI/CD to AWS EKS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    name: Build, Push to ECR, and Deploy to EKS
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-south-1
      ECR_REPOSITORY: 905418476815.dkr.ecr.ap-south-1.amazonaws.com/mytest
      CLUSTER_NAME: mlprojectcluster

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials using GitHub Secrets
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      # Step 3: Log in to ECR
      - name: Log in to Amazon ECR
        id: ecr-login
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY

      # Step 4: Build and tag Docker image
      - name: Build Docker image
        run: |
          docker build -t mytest:latest .
          docker tag mytest:latest $ECR_REPOSITORY:latest

      # Step 5: Push Docker image to ECR
      - name: Push Docker image to Amazon ECR
        run: |
          docker push $ECR_REPOSITORY:latest

      # Step 6: Update deployment YAML with the latest ECR image
      - name: Update deployment image
        run: |
          sed -i "s|image:.*|image: $ECR_REPOSITORY:latest|g" deployment.yaml

      # Step 7: Configure kubectl for EKS
      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      # Step 8: Deploy to EKS
      - name: Deploy to Amazon EKS
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      # Step 9: Verify deployment
      - name: Verify deployment
        run: |
          kubectl rollout status deployment/mlops-app
          kubectl get svc
